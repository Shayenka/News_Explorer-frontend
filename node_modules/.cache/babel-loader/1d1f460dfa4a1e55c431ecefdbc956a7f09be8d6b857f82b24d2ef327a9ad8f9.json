{"ast":null,"code":"const BASE_URL = \"http://127.0.0.1:3000\";\n\n// CLAVE API: 016f14e7761d4baca1c75b200bde1015\nexport const registerUserMock = async (email, password, name) => {\n  return new Promise((resolve, reject) => {\n    const user = {\n      email,\n      password,\n      name\n    };\n    localStorage.setItem('dummyUser', JSON.stringify(user));\n    resolve(user);\n  });\n};\nexport const authorizeMock = async (email, password) => {\n  return new Promise((resolve, reject) => {\n    const dummyUser = localStorage.getItem('dummyUser');\n    if (dummyUser.email === email && dummyUser.password === password) {\n      resolve(dummyUser);\n      return;\n    }\n    reject(new Error(\"Not found\"));\n  });\n};\nexport const registerUser = async (email, password, name) => {\n  try {\n    const response = await fetch(`${BASE_URL}/signup`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        name\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    } else {\n      const errorData = await response.json();\n      console.error(\"Error during registration:\", errorData);\n      throw new Error(\"Registration failed\");\n    }\n  } catch (error) {\n    console.error(\"Error during registration:\", error);\n    throw error;\n  }\n};\nexport const authorize = async (email, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/signin`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      if (data && data.token) {\n        localStorage.setItem(\"jwt\", data.token);\n        return data;\n      } else {\n        console.error(\"La respuesta del servidor no contiene un token v치lido.\");\n      }\n    } else {\n      console.error(\"Error en la respuesta del servidor:\", response.status);\n    }\n  } catch (err) {\n    console.error(\"Error en la solicitud:\", err);\n  }\n};\nexport const checkTokenValidity = async token => {\n  const response = await fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (response.ok) {\n    const data = await response.json();\n    return data;\n  } else {\n    throw new Error(\"Token inv치lido\");\n  }\n};","map":{"version":3,"names":["BASE_URL","registerUserMock","email","password","name","Promise","resolve","reject","user","localStorage","setItem","JSON","stringify","authorizeMock","dummyUser","getItem","Error","registerUser","response","fetch","method","headers","Accept","body","ok","data","json","errorData","console","error","authorize","token","status","err","checkTokenValidity","Authorization"],"sources":["C:/Users/shaye/Proyecto_Final/News_Explorer/news-explorer-frontend/src/utils/auth.js"],"sourcesContent":["const BASE_URL = \"http://127.0.0.1:3000\";\r\n\r\n// CLAVE API: 016f14e7761d4baca1c75b200bde1015\r\nexport const registerUserMock = async (email, password, name) => {\r\n  return new Promise((resolve, reject) => {\r\n    const user = {\r\n      email, password, name\r\n    }\r\n    localStorage.setItem('dummyUser', JSON.stringify(user));\r\n    resolve(user);\r\n  })\r\n }\r\n\r\n export const authorizeMock = async (email, password) => {\r\n  return new Promise((resolve, reject) => {\r\n    \r\n    const dummyUser = localStorage.getItem('dummyUser');\r\n    if(dummyUser.email === email && dummyUser.password === password){\r\n      resolve(dummyUser);\r\n      return;\r\n    }\r\n    reject(new Error(\"Not found\"));\r\n  })\r\n }\r\n\r\nexport const registerUser = async (email, password, name) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/signup`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password, name }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      const errorData = await response.json();\r\n      console.error(\"Error during registration:\", errorData);\r\n      throw new Error(\"Registration failed\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error during registration:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const authorize = async (email, password) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/signin`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password}),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      if (data && data.token) {\r\n        localStorage.setItem(\"jwt\", data.token);\r\n        return data;\r\n      } else {\r\n        console.error(\"La respuesta del servidor no contiene un token v치lido.\");\r\n      }\r\n    } else {\r\n      console.error(\"Error en la respuesta del servidor:\", response.status);\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Error en la solicitud:\", err);\r\n  }\r\n};\r\n\r\nexport const checkTokenValidity = async (token) => {\r\n  const response = await fetch(`${BASE_URL}/users/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (response.ok) {\r\n    const data = await response.json();\r\n    return data;\r\n  } else {\r\n    throw new Error(\"Token inv치lido\");\r\n  }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}