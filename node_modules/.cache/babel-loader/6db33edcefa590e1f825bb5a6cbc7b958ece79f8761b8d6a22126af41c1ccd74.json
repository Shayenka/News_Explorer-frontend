{"ast":null,"code":"const BASE_URL = \"http://127.0.0.1:3000\";\n\n// CLAVE API: 016f14e7761d4baca1c75b200bde1015\n\nexport const registerUser = async (email, password, name) => {\n  try {\n    const response = await fetch(`${BASE_URL}/signup`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        name\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    } else {\n      const errorData = await response.json();\n      console.error(\"Error during registration:\", errorData);\n      throw new Error(\"Registration failed\");\n    }\n  } catch (error) {\n    console.error(\"Error during registration:\", error);\n    throw error;\n  }\n};\nexport const authorize = async (email, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/signin`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      if (data && data.token) {\n        localStorage.setItem(\"jwt\", data.token);\n        return data;\n      } else {\n        console.error(\"La respuesta del servidor no contiene un token v치lido.\");\n      }\n    } else {\n      console.error(\"Error en la respuesta del servidor:\", response.status);\n    }\n  } catch (err) {\n    console.error(\"Error en la solicitud:\", err);\n  }\n};\nexport const checkTokenValidity = async token => {\n  const response = await fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (response.ok) {\n    const data = await response.json();\n    return data;\n  } else {\n    throw new Error(\"Token inv치lido\");\n  }\n};","map":{"version":3,"names":["BASE_URL","registerUser","email","password","name","response","fetch","method","headers","Accept","body","JSON","stringify","ok","data","json","errorData","console","error","Error","authorize","token","localStorage","setItem","status","err","checkTokenValidity","Authorization"],"sources":["C:/Users/shaye/Proyecto_Final/News_Explorer/news-explorer-frontend/src/utils/auth.js"],"sourcesContent":["const BASE_URL = \"http://127.0.0.1:3000\";\r\n\r\n// CLAVE API: 016f14e7761d4baca1c75b200bde1015\r\n\r\n\r\nexport const registerUser = async (email, password, name) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/signup`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password, name }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      const errorData = await response.json();\r\n      console.error(\"Error during registration:\", errorData);\r\n      throw new Error(\"Registration failed\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error during registration:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const authorize = async (email, password) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/signin`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password}),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      if (data && data.token) {\r\n        localStorage.setItem(\"jwt\", data.token);\r\n        return data;\r\n      } else {\r\n        console.error(\"La respuesta del servidor no contiene un token v치lido.\");\r\n      }\r\n    } else {\r\n      console.error(\"Error en la respuesta del servidor:\", response.status);\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Error en la solicitud:\", err);\r\n  }\r\n};\r\n\r\nexport const checkTokenValidity = async (token) => {\r\n  const response = await fetch(`${BASE_URL}/users/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (response.ok) {\r\n    const data = await response.json();\r\n    return data;\r\n  } else {\r\n    throw new Error(\"Token inv치lido\");\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;;AAExC;;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;EAC3D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,QAAS,SAAQ,EAAE;MACjDO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,KAAK;QAAEC,QAAQ;QAAEC;MAAK,CAAC;IAChD,CAAC,CAAC;IAEF,IAAIC,QAAQ,CAACQ,EAAE,EAAE;MACf,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,MAAM;MACL,MAAME,SAAS,GAAG,MAAMX,QAAQ,CAACU,IAAI,CAAC,CAAC;MACvCE,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,SAAS,CAAC;MACtD,MAAM,IAAIG,KAAK,CAAC,qBAAqB,CAAC;IACxC;EACF,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,SAAS,GAAG,MAAAA,CAAOlB,KAAK,EAAEC,QAAQ,KAAK;EAClD,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,QAAS,SAAQ,EAAE;MACjDO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,KAAK;QAAEC;MAAQ,CAAC;IACzC,CAAC,CAAC;IAEF,IAAIE,QAAQ,CAACQ,EAAE,EAAE;MACf,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,IAAIA,IAAI,CAACO,KAAK,EAAE;QACtBC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAET,IAAI,CAACO,KAAK,CAAC;QACvC,OAAOP,IAAI;MACb,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,wDAAwD,CAAC;MACzE;IACF,CAAC,MAAM;MACLD,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEb,QAAQ,CAACmB,MAAM,CAAC;IACvE;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZR,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEO,GAAG,CAAC;EAC9C;AACF,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG,MAAOL,KAAK,IAAK;EACjD,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,QAAS,WAAU,EAAE;IACnDO,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE,kBAAkB;MAClCkB,aAAa,EAAG,UAASN,KAAM;IACjC;EACF,CAAC,CAAC;EAEF,IAAIhB,QAAQ,CAACQ,EAAE,EAAE;IACf,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,MAAM;IACL,MAAM,IAAIK,KAAK,CAAC,gBAAgB,CAAC;EACnC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}